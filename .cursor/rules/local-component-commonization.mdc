description: ページ内共通化の方針（スタイルのみは `__style` + `cva`、構造/ロジックは `__Component`、`cx` はオブジェクト記法）
globs: "**/*"
alwaysApply: true

## 目的

- 単一ファイル内の共通化を、責務（スタイル/構造）で適切に分離し、可読性・保守性を高める。

## 方針

- スタイルのみを切り出す場合は、ファイルローカルの `__style` オブジェクトに `cva` で定義する。
- 構造やロジックごと（ラッパー要素や入れ子の DOM、イベント、条件分岐などを含む）共通化する場合に限り、ページ内ローカルコンポーネント `__Component` を作成する。
- クラス結合で条件が必要な場合は `cx({ ... })` のオブジェクト記法を用いる。

## 実装ルール

- `__style` は 1 ファイル 1 つに統合し、簡潔なキー名を用いる（例: `img`, `wrap`, `title`）。
- `cva` の `variants` は必要最小限。真偽は 2 値のみ。
- `__Component` は構造を共通化する時のみ作成する（例: `__Img` は画像ラッパー全体の構造を共通化する場合）。
- `cx('base', { 'cond-a': a, 'cond-b': b })` を用いて条件を表現する。

### 例（スタイルのみ: cva）

```ts
const __style = {
  img: cva('aspect-[1/1] basis-[40%] rounded-md bg-light1', {
    variants: {
      has: {
        false:
          'flex items-center justify-center text-xs text-black/40 sm:aspect-[1200/630]',
        true: 'relative overflow-hidden md:aspect-[1200/630]',
      },
    },
  }),
}
```

### 例（構造まるごと: \_\_Component）

```tsx
const __Img = (props: { children?: ReactNode; has: boolean }) => {
  return (
    <div
      className={cx('aspect-[1/1] basis-[40%] rounded-md bg-light1', {
        'flex items-center justify-center text-xs text-black/40 sm:aspect-[1200/630]':
          !props.has,
        'relative overflow-hidden md:aspect-[1200/630]': props.has,
      })}
    >
      {props.children}
    </div>
  )
}
```

## 禁止事項

- スタイルのみの共通化のために `__Component` を作ること（スタイルは必ず `__style`/`cva` を使用する）。
- `cx` の条件分岐で配列や三項に依存した分岐を書くこと（オブジェクト記法に統一）。
