---
description: 'コンポーネント内の共通スタイルは __style オブジェクトで簡潔に定義する規約'
globs:
  - '**/*'
alwaysApply: true
---

## 目的

- コンポーネント内（ファイルローカル）の共通スタイル定義を一貫化し、可読性・保守性を高める。

## 基本ルール

- 共通スタイルはファイル内ローカルの `__style` オブジェクトに集約する。
- `__style` の各プロパティ名は簡潔に（例: `img`, `wrap`, `title`, `desc`, `list`, `item`, `btn`）。
- 冗長な命名（例: `__styleOgImageContainer`）は使用しない。目的語は不要。文脈から分かる名前にする。
- `__style` はファイル外へエクスポートしない（ローカル限定）。
- `__` 系ローカル補助ロジックと同様、ファイル最下部に配置する。

## 実装ルール

- クラス合成は `class-variance-authority` の `cva` / `cx` を使用する。
- `cva` の `variants` / `defaultVariants` は、文脈上明らかな場合に限り短く命名する。
  - 例: `hasImage` → `has`、`appearance` → `tone`、`size` は `sm|md|lg`。
- 真偽フラグのキーは必要最小限にする（`true`/`false` の 2 値のみ）。
- 1 ファイルに複数の `__style*` 変数を作らない。1 つの `__style` に統合する。

## 例（推奨）

```ts
// use: <div className={__style.img({ has: true })} />
const __style = {
  img: cva('aspect-[1/1] basis-[40%] rounded-md bg-light1', {
    variants: {
      has: {
        false:
          'flex items-center justify-center text-xs text-black/40 sm:aspect-[1200/630]',
        true: 'relative overflow-hidden md:aspect-[1200/630]',
      },
    },
  }),
}
```

## 禁止事項

- `__styleOgImageContainer` のような冗長命名。
- コンポーネント外（共有）に `__style` をエクスポートすること。
- プロパティや variant 名にドメイン語を過度に付与して冗長化すること。

## 運用

- コードレビューでは `__style` の存在と簡潔な命名、variants の過不足を確認する。
- 既存コードは機会を見て `__style` へ集約し、冗長な命名を段階的に解消する。
