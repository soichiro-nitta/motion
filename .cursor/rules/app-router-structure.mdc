description: App Router 構成とルートグループ運用ルール
globs: "\*_/_"
alwaysApply: true

# App Router の構成/ルートグループ運用

このルールは、Next.js App Router のディレクトリ構成、RSC とクライアント分離の運用方針を定義する。

## 目的

- URL に影響させずに意味的なグルーピングを行い、見通しと保守性を高める。
- `page.tsx` は RSC を維持し、クライアント依存を適切に分離する。

## ディレクトリ構成

- 各ページ配下構成（RSC + Client 分離）:
  - `page.tsx` は RSC のままに保つ（"use client" は付与しない）。

## レイアウト（トップレベル）

- `app/layout.tsx` は `<main>` ランドマークで `children` をラップすること。
- `<main>` はアプリ全体で一意にする。ページ（`page.tsx`）側では `<main>` を使用しない。
- `<header>`, `<footer>`, `<nav>` 等のランドマークは必要に応じてレイアウトに配置し、重複を避ける。

## トップページの運用

- トップページ関連は `app/(home)` に集約し、`app/` 直下や共有ディレクトリに散在させない。

## 命名・エクスポート

- コンポーネント名はパスカルケース。単回利用の子は `_` プレフィックスを付ける（例: `_Hero.tsx`）。
- ページ/レイアウトの変数名は `Page` / `Layout`（default export）。その他は名前付き export。

## motion の配置

- モーションの ID とユーティリティは `app/motion.ts` に集約し、各コンポーネントから import する。
- ID は UPPER_SNAKE_CASE で定義する。

## 禁止事項

- `page.tsx` に "use client" を付与しない。
- 不要な `...props` の横流しを行わない。
- トップページ専用の要素を `app/` 直下や共通ディレクトリに置かない（`(home)` に集約する）。
- ページ（`page.tsx`）で `<main>` を使用しない（`<main>` はレイアウトに一意で存在）。
